# import AuthDirective from './directives/auth.graphql';
# import { Project } from '../../prisma/generated/schema.graphql'
# import { kProjectCreateInput } from './input.graphql';

type Query {
  project(where: WhereUniqueInput!): Project @requiresAuth
  projects(
    where: ProjectWhereInput
    orderBy: ProjectOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ProjectConnection! @requiresAuth
}

type Mutation {
  createProject(data: kProjectCreateInput!): Project!
    @hasRoles(roles: [ADMIN, OWNER])
  updateProject(
    data: kProjectUpdateInput!
    where: WhereUniqueInput!
  ): Project @hasRoles(roles: [ADMIN, OWNER])
  deleteProject(where: WhereUniqueInput!): Project
    @hasRoles(roles: [ADMIN, OWNER])
}
