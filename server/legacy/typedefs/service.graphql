# import AuthDirective from './directives/auth.graphql';
# import { ServiceWhereUniqueInput } from '../../prisma/generated/schema.graphql'
# import { kServiceCreateInput, WhereUniqueInput } from './input.graphql'

type Query {
  service(where: WhereUniqueInput!): Service
    @requiresAuth
    @hasRoles(roles: [ADMIN, OWNER, USER])
  services(
    where: ServiceWhereInput
    orderBy: ServiceOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): ServiceConnection! @requiresAuth @hasRoles(roles: [ADMIN, OWNER, USER])
}

type Mutation {
  createService(data: kServiceCreateInput!): Service!
    @hasRoles(roles: [ADMIN, OWNER])
  updateService(data: kServiceUpdateInput!, where: WhereUniqueInput!): Service
    @hasRoles(roles: [ADMIN, OWNER])
  deleteService(where: WhereUniqueInput!): Service
    @hasRoles(roles: [ADMIN, OWNER])
}
