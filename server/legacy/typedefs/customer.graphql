# import AuthDirective from './directives/auth.graphql';
# import { Customer, CustomerWhereUniqueInput, CustomerWhereInput, CustomerConnection } from '../../prisma/generated/schema.graphql'
# import { kCustomerCreateInput } from './input.graphql'

type Query {
  customer(where: WhereUniqueInput): Customer
    @hasRoles(roles: [ADMIN, OWNER, USER])
  customers(
    where: CustomerWhereInput
    orderBy: CustomerOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): CustomerConnection! @hasRoles(roles: [ADMIN, OWNER, USER])
}

type Mutation {
  createCustomer(data: kCustomerCreateInput!): Customer!
    @hasRoles(roles: [ADMIN, OWNER])
  updateCustomer(
    data: kCustomerUpdateInput!
    where: WhereUniqueInput!
  ): Customer @hasRoles(roles: [ADMIN, OWNER])
  deleteCustomer(where: WhereUniqueInput!): Customer
    @hasRoles(roles: [ADMIN, OWNER])
}
